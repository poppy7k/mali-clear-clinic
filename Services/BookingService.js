import ApiClient from './api/ApiClient.js';
import { AppError, ErrorTypes } from '../utils/ErrorHandler.js';

class BookingService {
    static async createBooking(bookingData) {
        try {
            if (!bookingData.user_id || !bookingData.product_id || !bookingData.full_name ||
                !bookingData.phone || !bookingData.address || !bookingData.booking_date) {
                throw new AppError(
                    '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô',
                    ErrorTypes.VALIDATION_ERROR
                );
            }
    
            const response = await ApiClient.post('/booking/Booking.php', bookingData);
            
            if (!response || response.status !== 'success') {
                throw new AppError(
                    response?.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ',
                    ErrorTypes.API_ERROR
                );
            }
    
            return response;
        } catch (error) {
            if (error instanceof AppError) {
                throw error;
            }
            throw new AppError(
                '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á',
                ErrorTypes.NETWORK_ERROR,
                error
            );
        }
    }    

    static async getBookings() {
        try {
            const response = await ApiClient.get('/booking/Booking.php');
            
            if (!response) {
                throw new AppError(
                    '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ',
                    ErrorTypes.NETWORK_ERROR
                );
            }

            if (response.status !== 'success') {
                throw new AppError(
                    response.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ',
                    ErrorTypes.API_ERROR
                );
            }

            return response;
        } catch (error) {
            if (error instanceof AppError) {
                throw error;
            }
            throw new AppError(
                '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á',
                ErrorTypes.NETWORK_ERROR,
                error
            );
        }
    }

    static async deleteBooking(bookingId) {
        try {
            if (!bookingId) {
                throw new AppError(
                    '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á',
                    ErrorTypes.VALIDATION_ERROR
                );
            }

            const response = await ApiClient.delete('/booking/Booking.php', { id: bookingId });
            
            if (!response || response.status !== 'success') {
                throw new AppError(
                    response?.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ',
                    ErrorTypes.API_ERROR
                );
            }

            return response;
        } catch (error) {
            if (error instanceof AppError) {
                throw error;
            }
            throw new AppError(
                '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á',
                ErrorTypes.NETWORK_ERROR,
                error
            );
        }
    }
    static async updateBookingStatus(bookingId, status) {
        try {
            if (!bookingId || !status) {
                console.error("üî¥ Missing required fields:", { bookingId, status });
                throw new AppError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô', ErrorTypes.VALIDATION_ERROR);
            }
    
            console.log("üîπ Debug: Sending API request to update status:", { booking_id: bookingId, status });
    
            // ‡πÉ‡∏ä‡πâ POST ‡πÅ‡∏ó‡∏ô PUT
            const response = await ApiClient.post('/booking/Booking.php', {
                booking_id: bookingId, // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô id ‚Üí booking_id ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö PHP
                status: status,
                _method: 'PUT' // ‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ API ‡∏ó‡∏£‡∏≤‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô PUT
            });
    
            if (!response) {
                throw new AppError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ', ErrorTypes.NETWORK_ERROR);
            }
    
            if (response.status !== 'success') {
                console.error("üî¥ API Error Response:", response);
                throw new AppError(response.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏î‡πâ', ErrorTypes.API_ERROR);
            }
    
            console.log("‚úÖ API Update Success:", response);
            return response;
        } catch (error) {
            if (error instanceof AppError) {
                throw error;
            }
            console.error("üî¥ API Request Error:", error);
            throw new AppError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞', ErrorTypes.NETWORK_ERROR, error);
        }
    }

    

    static async getBookingsByUserId(userId) {
        try {
            if (!userId) {
                throw new AppError(
                    '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ',
                    ErrorTypes.VALIDATION_ERROR
                );
            }

            const response = await ApiClient.get(`/booking/Booking.php?user_id=${userId}`);
            
            if (!response) {
                throw new AppError(
                    '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ',
                    ErrorTypes.NETWORK_ERROR
                );
            }

            if (response.status !== 'success') {
                throw new AppError(
                    response.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ',
                    ErrorTypes.API_ERROR
                );
            }

            return response;
        } catch (error) {
            if (error instanceof AppError) {
                throw error;
            }
            throw new AppError(
                '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á',
                ErrorTypes.NETWORK_ERROR,
                error
            );
        }
    }
}

export default BookingService; 